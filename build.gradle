buildscript {
    repositories {
        mavenLocal()

        dependencies {
            classpath 'com.github.breadmoirai:github-release:2.3.0'
        }
    }
}

plugins {
    id 'java'
    id 'idea'
}

apply plugin: 'com.github.breadmoirai.github-release'

group = 'com.github.breadmoirai'
version = '0.1-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

}

githubRelease {
//    def ii = {
//        """${
//            changelog {
//                executable {
//                    "C:\\Users\\TonTL\\AppData\\Local\\GitHub\\PortableGit_69bd5e6f85e4842f07db71c9618a621154c52254\\bin\\git.exe"
//                }
//            }.call().readLines().stream().map {
//                "- $it"
//            }.collect(Collectors.joining('\n', '## Changelog\n', ''))
//        }
//        """
//    }.memoize()
    authorization "Basic ${Base64.encoder.encodeToString("${project.property('github.username')}:${project.property('github.password')}".bytes)}"
    body { """
# Makeing a reElease

what this is just a test? new test

## Changellog
* nothin
""" }
    overwrite true
    releaseAssets files("test1.txt", "test2.txt")
    draft = false
}

gradle.taskGraph.whenReady { graph ->
    graph.beforeTask { task ->
        if (task.name == "githubRelease") {
            task.releaseAssets = files("test3.txt")
        }
//        setOverwrite provider({ ->
//            def result = false
//            if (new Exception().stackTrace.any { it.className.contains('breadmoirai') }) {
//                new groovy.swing.SwingBuilder().edt {
//                    dialog(modal: true,
//                            title: 'Overwrite Existing',
//                            alwaysOnTop: true,
//                            resizable: false,
//                            locationRelativeTo: null,
//                            pack: true,
//                            show: true
//                    ) {
//                        vbox {
//                            label(text: 'An existing Github release has been found. Would you like to delete it?')
//                            button(defaultButton: true, text: 'Yes', actionPerformed: {
//                                result = true
//                                dispose()
//                            })
//                            button(text: 'No', actionPerformed: {
//                                result = false
//                                dispose()
//                            })
//                        }
//                    }
//                }
//            }
//            return result
//        })
    }
}

